import openai
import os
import re

# Function to read API key from file
def read_api_key(file_path="OpenAI.API"):
    try:
        with open(file_path, "r") as f:
            return f.readline().strip()
    except FileNotFoundError as e:
        print(f"Error reading API key: {e}")
        return None

# Set up the OpenAI API key
openai.api_key = read_api_key()

def generate_prompt(niche, category, trends_data):
    # Get the relevant data from the trends_data
    max_interest = trends_data.max()[0]
    min_interest = trends_data.min()[0]
    mean_interest = trends_data.mean()[0]
    recent_interest = trends_data.iloc[-1][0]
    
    # Read the prompt from a file
    with open('prompt.txt', 'r') as file:
        prompt = file.read()
    
    # Replace the placeholder variables with the actual data
    prompt = prompt.format(niche=niche,
                           recent_interest=recent_interest,
                           max_interest=max_interest,
                           min_interest=min_interest,
                           mean_interest=mean_interest,
                           category=category)
    
    return prompt



# Function to generate ideas for a niche and category using the OpenAI API and the prompt generated by the generate_prompt function above
def generate_ideas(prompt, niche, model="gpt-4", n=5):
    chat_prompt = (
        f"User: {prompt}\n"
        "AI:"
    )

    try:
        response = openai.ChatCompletion.create(
            model=model,
            messages=[
                {"role": "user", "content": prompt}
            ],
            max_tokens=700,
            n=n,
            stop=None,
            temperature=0.5,
        )
        
        

        return [choice.message.content.strip() for choice in response['choices']]
    except Exception as e:
        print(f"Error generating ideas: {e}")
        print(f"niche: {niche}")
        return None



